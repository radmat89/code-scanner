buildscript {

    repositories {

        google()

        mavenCentral()
    }

    dependencies {

        classpath 'com.android.tools.build:gradle:8.8.1'
    }
}

allprojects {

    repositories {

        google()

        mavenCentral()
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

ext {
    libraryVersion = '2.3.0'
    publishedGroupId = 'com.budiyev.android'
}

group = publishedGroupId
version = libraryVersion

android {
    namespace = 'com.budiyev.android.codescanner'

    defaultConfig {
        minSdk = 19
        targetSdk = 35
        compileSdk = 35
        buildToolsVersion = '35.0.1'
        versionCode = 61
        versionName = libraryVersion
        multiDexEnabled = true
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled = true
    }

    buildTypes {
        release {
            minifyEnabled = false
            proguardFiles(getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro')
        }
    }

    publishing {
        singleVariant('release') {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.5'
    api 'androidx.multidex:multidex:2.0.1'
    api 'com.google.zxing:core:3.3.3'
    api 'androidx.annotation:annotation:1.9.1'
}

tasks.register('sourcesJar', Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

tasks.register('javadoc', Javadoc) {
    options.charSet = 'UTF-8'
    failOnError = false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

tasks.register('javadocJar', Jar) {
    dependsOn javadoc
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from(components['release'])
                artifactId = 'code-scanner'
                groupId = publishedGroupId
                version = libraryVersion
            }
        }
    }
}

// Disable javadoc generation on JitPack (not supported for Android projects)
tasks.withType(Javadoc).all {
    enabled = false
}
